# Makefile for the remaining tests that need special care in one way or another

ifneq ($(shell echo),)
  CMD_EXE = 1
endif

ifdef CMD_EXE
  S = $(subst /,\,/)
  NOT = - # Hack
  EXE = .exe
  NULLDEV = nul:
  MKDIR = mkdir $(subst /,\,$1)
  RMDIR = -rmdir /s /q $(subst /,\,$1)
  DEL = del /f $(subst /,\,$1)
else
  S = /
  NOT = !
  EXE =
  NULLDEV = /dev/null
  MKDIR = mkdir -p $1
  RMDIR = $(RM) -r $1
  DEL = $(RM) $1
endif

ifdef QUIET
  .SILENT:
  NULLOUT = >$(NULLDEV)
  NULLERR = 2>$(NULLDEV)
endif

SIM65FLAGS = -x 200000000

CL65 := $(if $(wildcard ../../bin/cl65*),..$S..$Sbin$Scl65,cl65)
SIM65 := $(if $(wildcard ../../bin/sim65*),..$S..$Sbin$Ssim65,sim65)

WORKDIR = ..$S..$Stestwrk$Smisc

OPTIONS = g O Os Osi Osir Osr Oi Oir Or

DIFF = $(WORKDIR)$Sbdiff$(EXE)

CC = gcc
CFLAGS = -O2

.PHONY: all clean

SOURCES := $(wildcard *.c)
TESTS  = $(foreach option,$(OPTIONS),$(SOURCES:%.c=$(WORKDIR)/%.$(option).6502.prg))
TESTS += $(foreach option,$(OPTIONS),$(SOURCES:%.c=$(WORKDIR)/%.$(option).65c02.prg))

all: $(TESTS)

$(WORKDIR):
	$(call MKDIR,$(WORKDIR))

$(DIFF): ../bdiff.c | $(WORKDIR)
	$(CC) $(CFLAGS) -o $@ $<

define PRG_template

# should compile, but then hangs in an endless loop
$(WORKDIR)/endless.$1.$2.prg: endless.c | $(WORKDIR)
	$(if $(QUIET),echo misc/endless.$1.$2.prg)
	$(CL65) -t sim$2 -$1 -o $$@ $$< $(NULLERR)
	$(NOT) $(SIM65) $(SIM65FLAGS) $$@ $(NULLOUT) $(NULLERR)

# these need reference data that can't be generated by a host-compiled program,
# in a useful way
$(WORKDIR)/limits.$1.$2.prg: limits.c $(DIFF)
	$(if $(QUIET),echo misc/limits.$1.$2.prg)
	$(CL65) -t sim$2 -$1 -o $$@ $$< $(NULLERR)
	$(SIM65) $(SIM65FLAGS) $$@ > $(WORKDIR)/limits.$1.out
	$(DIFF) $(WORKDIR)/limits.$1.out limits.ref

# here we check if the right warnings are produced
$(WORKDIR)/goto.$1.$2.prg: goto.c $(DIFF)
	$(if $(QUIET),echo misc/goto.$1.$2.prg)
	$(CL65) -t sim$2 -$1 -o $$@ $$< 2>$(WORKDIR)/goto.$1.out
	$(DIFF) $(WORKDIR)/goto.$1.out goto.ref

# the rest are tests that fail currently for one reason or another
$(WORKDIR)/fields.$1.$2.prg: fields.c | $(WORKDIR)
	@echo "FIXME: " $$@ "currently will fail."
	$(CL65) -t sim$2 -$1 -o $$@ $$< $(NULLERR)
	-$(SIM65) $(SIM65FLAGS) $$@ $(NULLOUT)
$(WORKDIR)/sitest.$1.$2.prg: sitest.c | $(WORKDIR)
	@echo "FIXME: " $$@ "currently will fail."
	-$(CL65) -t sim$2 -$1 -o $$@ $$< $(NULLERR)
#	-$(SIM65) $(SIM65FLAGS) $$@ $(NULLOUT)
$(WORKDIR)/cc65141011.$1.$2.prg: cc65141011.c | $(WORKDIR)
	@echo "FIXME: " $$@ "currently can fail."
	$(CL65) -t sim$2 -$1 -o $$@ $$< $(NULLERR)
	-$(SIM65) $(SIM65FLAGS) $$@ $(NULLOUT)

endef # PRG_template

$(foreach option,$(OPTIONS),$(eval $(call PRG_template,$(option),6502)))
$(foreach option,$(OPTIONS),$(eval $(call PRG_template,$(option),65c02)))

clean:
	@$(call RMDIR,$(WORKDIR))
	@$(call DEL,$(SOURCES:.c=.o))
