FEATURES {
    STARTADDRESS: default = $2E00;
}
SYMBOLS {
    __STACKSIZE__:       type = weak, value = $0800; # 2k stack
    __OVERLAYSIZE__:     type = weak, value = $1000; # 4k overlay
    __RESERVED_MEMORY__: type = weak, value = $0000;
}
MEMORY {
    ZP:      file = "", define = yes, start = $0082,                size = $007E;
    HEADER:  file = %O,               start = $0000,                size = $0006;
    RAM:     file = %O,               start = %S + __OVERLAYSIZE__, size = $BC20 - __STACKSIZE__ - __OVERLAYSIZE__ - %S;
    TRAILER: file = %O,               start = $0000,                size = $0006;
    OVL1:    file = "%O.1",           start = %S,                   size = __OVERLAYSIZE__;
    OVL2:    file = "%O.2",           start = %S,                   size = __OVERLAYSIZE__;
    OVL3:    file = "%O.3",           start = %S,                   size = __OVERLAYSIZE__;
    OVL4:    file = "%O.4",           start = %S,                   size = __OVERLAYSIZE__;
    OVL5:    file = "%O.5",           start = %S,                   size = __OVERLAYSIZE__;
    OVL6:    file = "%O.6",           start = %S,                   size = __OVERLAYSIZE__;
    OVL7:    file = "%O.7",           start = %S,                   size = __OVERLAYSIZE__;
    OVL8:    file = "%O.8",           start = %S,                   size = __OVERLAYSIZE__;
    OVL9:    file = "%O.9",           start = %S,                   size = __OVERLAYSIZE__;
}
SEGMENTS {
    EXEHDR:   load = HEADER,  type = ro;
    STARTUP:  load = RAM,     type = ro,  define = yes;
    LOWCODE:  load = RAM,     type = ro,  define = yes, optional = yes;
    INIT:     load = RAM,     type = ro,                optional = yes;
    CODE:     load = RAM,     type = ro,  define = yes;
    RODATA:   load = RAM,     type = ro;
    DATA:     load = RAM,     type = rw;
    BSS:      load = RAM,     type = bss, define = yes;
    ZEROPAGE: load = ZP,      type = zp;
    EXTZP:    load = ZP,      type = zp,                optional = yes;
    AUTOSTRT: load = TRAILER, type = ro;
    OVERLAY1: load = OVL1,    type = ro,  define = yes, optional = yes;
    OVERLAY2: load = OVL2,    type = ro,  define = yes, optional = yes;
    OVERLAY3: load = OVL3,    type = ro,  define = yes, optional = yes;
    OVERLAY4: load = OVL4,    type = ro,  define = yes, optional = yes;
    OVERLAY5: load = OVL5,    type = ro,  define = yes, optional = yes;
    OVERLAY6: load = OVL6,    type = ro,  define = yes, optional = yes;
    OVERLAY7: load = OVL7,    type = ro,  define = yes, optional = yes;
    OVERLAY8: load = OVL8,    type = ro,  define = yes, optional = yes;
    OVERLAY9: load = OVL9,    type = ro,  define = yes, optional = yes;
}
FEATURES {
    CONDES: type    = constructor,
            label   = __CONSTRUCTOR_TABLE__,
            count   = __CONSTRUCTOR_COUNT__,
            segment = INIT;
    CONDES: type    = destructor,
            label   = __DESTRUCTOR_TABLE__,
            count   = __DESTRUCTOR_COUNT__,
            segment = RODATA;
    CONDES: type    = interruptor,
            label   = __INTERRUPTOR_TABLE__,
            count   = __INTERRUPTOR_COUNT__,
            segment = RODATA,
            import  = __CALLIRQ__;
}
