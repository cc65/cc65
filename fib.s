;
; File generated by cc65 v 2.18 - Git N/A
;
	.fopt		compiler,"cc65 v 2.18 - Git N/A"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_printf
	.export		_mem
	.export		_fibonacci
	.export		_main

.segment	"DATA"

_mem:
	.word	$0001
	.word	$0001
	.word	$0001
	.res	46,$00

.segment	"RODATA"

L0019:
	.byte	$25,$64,$09,$0A,$00

; ---------------------------------------------------------------
; int __near__ fibonacci (int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_fibonacci: near

.segment	"CODE"

	jsr     pushax
	jsr     decsp4
	ldy     #$05
	jsr     ldaxysp
	jsr     aslax1
	clc
	adc     #<(_mem)
	tay
	txa
	adc     #>(_mem)
	tax
	tya
	ldy     #$01
	jsr     ldaxidx
	cpx     #$00
	bne     L0009
	cmp     #$00
L0009:	jsr     boolne
	jeq     L0006
	ldy     #$05
	jsr     ldaxysp
	jsr     aslax1
	clc
	adc     #<(_mem)
	tay
	txa
	adc     #>(_mem)
	tax
	tya
	ldy     #$01
	jsr     ldaxidx
	jmp     L0005
L0006:	ldy     #$05
	jsr     ldaxysp
	jsr     decax1
	jsr     _fibonacci
	ldy     #$02
	jsr     staxysp
	ldy     #$05
	jsr     ldaxysp
	jsr     decax2
	jsr     _fibonacci
	ldy     #$00
	jsr     staxysp
	ldy     #$05
	jsr     ldaxysp
	jsr     aslax1
	clc
	adc     #<(_mem)
	tay
	txa
	adc     #>(_mem)
	tax
	tya
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	jsr     tosaddax
	ldy     #$00
	jsr     staxspidx
	ldy     #$05
	jsr     ldaxysp
	jsr     aslax1
	clc
	adc     #<(_mem)
	tay
	txa
	adc     #>(_mem)
	tax
	tya
	ldy     #$01
	jsr     ldaxidx
	jmp     L0005
L0005:	jsr     incsp6
	rts

.endproc

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	lda     #<(L0019)
	ldx     #>(L0019)
	jsr     pushax
	ldx     #$00
	lda     #$19
	jsr     _fibonacci
	jsr     pushax
	ldy     #$04
	jsr     _printf
	ldx     #$00
	lda     #$00
	jmp     L0017
L0017:	rts

.endproc

