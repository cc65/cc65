<!doctype linuxdoc system>

<article>

<title>Nintendo Entertainment System specific information for cc65
<author>
<url url="mailto:uz@cc65.org" name="Ullrich von Bassewitz">,<newline>
<url url="mailto:polluks@sdf.lonestar.org" name="Stefan A. Haubenthal">
<date>2014-04-12

<abstract>
An overview over the NES runtime system as it is implemented for the
cc65 C compiler.
</abstract>

<!-- Table of contents -->
<toc>

<!-- Begin the document -->

<sect>Overview<p>

This file contains an overview of the NES runtime system as it comes
with the cc65 C compiler. It describes the memory layout, NES specific header
files, available drivers, and any pitfalls specific to that platform.

Please note that NES specific functions are just mentioned here, they are
described in detail in the separate <url url="funcref.html" name="function
reference">. Even functions marked as "platform dependent" may be available on
more than one platform. Please see the function reference for more
information.


<sect>Binary format<p>

The standard binary output format generated by the linker for the NES target
is a machine language program with an INES cartridge header. It is of course
possible to change this behaviour by using a modified startup file and linker
config.

<sect>Memory layout<p>

cc65 generated programs with the default setup run with the I/O area and a
CHR bank enabled, which gives a usable memory range of &dollar;8000 - &dollar;FFF3.
All boot ROM entry points may be called directly without additional code.

Special locations:

<descrip>
  <tag/Text screen/
  The text screen is located at VRAM &dollar;2000.

  <tag/Stack/
  The C runtime stack is located at &dollar;7FFF and growing downwards.

  <tag/Heap/
  The C heap is located at the end of the program and grows towards the C
  runtime stack.

</descrip><p>



<sect>Platform specific header files<p>

Programs containing NES specific code may use the <tt/nes.h/ header file.


<sect1>NES specific functions<p>

<itemize>
<item>waitvblank - wait until the start of vblank
<item>get_tv
</itemize>



<sect1>Hardware access<p>

The following pseudo variables declared in the <tt/nes.inc/ include file do
allow access to hardware located in the address space.

<descrip>

  <tag><tt/PPU/</tag>
  The <tt/PPU/ defines allow access to the PPU chip.

  <tag><tt/APU/</tag>
  The <tt/APU/ defines allow access to the APU chip.

</descrip><p>



<sect>Loadable drivers<p>

All drivers must be statically linked because no file I/O is available.
The names in the parentheses denote the symbols to be used for static linking of the drivers.


<sect1>Graphics drivers<p>

<descrip>

  <tag><tt/nes-64-56-2.tgi (nes_64_56_2)/</tag>
  This driver features a resolution of 64&times;56 with 2 colors using the
  CHR bank.

</descrip><p>


<sect1>Extended memory drivers<p>

No extended memory drivers are currently available for the NES.


<sect1>Joystick drivers<p>

<descrip>

  <tag><tt/nes-stdjoy.joy (nes_stdjoy)/</tag>
  A joystick driver for the standard four buttons joypad is available.

</descrip><p>

The generic interface doesn't export the start and select buttons. To
test for those, use the defines in nes.h instead of the generic masks.

Example:
<tscreen><verb>
if (joy_read(0) & KEY_A)
</verb></tscreen>


<sect1>Mouse drivers<p>

No mouse drivers are currently available for the NES.


<sect1>RS232 device drivers<p>

No serial drivers are currently available for the NES.



<sect>Limitations<p>

<sect1>Disk I/O<p>

The existing library for the NES doesn't implement C file
I/O. There are no hacks for the <tt/read()/ and <tt/write()/ routines.

To be more concrete, this limitation means that you cannot use any of the
following functions (and a few others):

<itemize>
<item>fclose
<item>fopen
<item>fread
<item>fprintf
<item>fputc
<item>fscanf
<item>fwrite
<item>...
</itemize>



<sect>Other hints<p>



<sect>License<p>

This software is provided 'as-is', without any expressed or implied
warranty.  In no event will the authors be held liable for any damages
arising from the use of this software.

Permission is granted to anyone to use this software for any purpose,
including commercial applications, and to alter it and redistribute it
freely, subject to the following restrictions:

<enum>
<item>	The origin of this software must not be misrepresented; you must not
	claim that you wrote the original software. If you use this software
	in a product, an acknowledgment in the product documentation would be
	appreciated but is not required.
<item>	Altered source versions must be plainly marked as such, and must not
	be misrepresented as being the original software.
<item>	This notice may not be removed or altered from any source
	distribution.
</enum>

</article>



